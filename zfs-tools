#!/bin/bash

ZFS_TOOLS="$0"
POOL_LIST=`zpool list -H | cut -f 1`
SNAPSHOT_LIST=``

function help {
	echo "usage: $ZFS_TOOLS <command> [args]"
	echo ""
	echo "Command in:"
	echo ""
	echo "  pool             Manage pools"
	echo "  snapshot         Manage snapshots"
	echo ""

	exit 1
}

function docker_help {
	echo "usage: $ZFS_TOOLS docker <subcommand> [args]"
	echo ""
	echo "Subcommand in:"
	echo ""
	echo "  clear            Remove all docker objects"
	echo "  help             Show this message"
	echo ""

	exit 1
}

function docker {
	if [ -z "$1" ]; then
		docker_help "${@:2}"
	fi

	case "$1" in
		clear)
			for obj in `zfs list -H -t all | cut -f 1 | grep "^root/var/lib/docker"`; do
				zfs destroy -Rr $obj > /dev/null 2>&1
			done
			;;
		*)
			docker_help "${@:2}"
			;;
	esac
}

function pool_help {
	echo "snapshot help"
	exit 1
}

function pool {
	if [ -z "$1" ]; then
		pool_help "${@:2}"
	fi
}

function snapshot_help {
	echo "usage: $ZFS_TOOLS snapshot <subcommand> [args]"
	echo ""
	echo "Subcommand in:"
	echo ""
	echo "  apply            Apply snapshot to system"
	echo "  clear            Remove all snapshots"
	echo "  destroy          Remove snapshots"
	echo "  help             Show this message"
	echo "  list             List snapshots"
	echo "  save             Save new snapshots"
	echo ""

	exit 1
}

function snapshot_exist_check {
	if [[ `snapshot_list` != *$1* ]]; then
		echo "No snapshot named \"$1\""

		exit 1
	fi
}

function snapshot_apply {
	if [ -z "$1" ]; then
		echo "usage: $ZFS_TOOLS snapshot apply <name>"

		exit 1
	fi

	snapshot_exist_check $1

	for snap in `zfs list -H -t snapshot | cut -f 1 | grep "@$1$"`; do
		echo -n "Rolling back to [$snap] : "
		zfs rollback -r -R -f $snap;
		echo "OK"
	done

	reboot
}

function snapshot_clear {
	if [ -n "$1" ]; then
		echo "usage: $ZFS_TOOLS snapshot clear"

		exit 1
	fi

	for snap in `zfs list -H -t snapshot | cut -f 1`; do
		echo -n "Destroying [$snap]: "
		zfs destroy $snap
		echo "OK"
	done
}

function snapshot_destroy {
	if [ -z "$1" ]; then
		echo "usage: $ZFS_TOOLS snapshot destroy <name>"

		exit 1
	fi

	snapshot_exist_check $1

	for snap in `zfs list -H -t snapshot | cut -f 1 | grep "@$1$"`; do
		echo -n "Destroying [$snap]: "
		zfs destroy $snap
		echo "OK"
	done
}

function snapshot_list_ {
	for snap in `zfs list -H -t snapshot | cut -f 1`; do
		if [[ "$snap" =~ @(.*)$ ]]; then
			echo ${BASH_REMATCH[1]}
		fi
	done
}

function snapshot_list {
	if [ -n "$1" ]; then
		echo "usage: $ZFS_TOOLS snapshot list"

		exit 1
	fi

	snapshot_list_ | sort -u -
}

function snapshot_save {
	if [ -z "$1" ]; then
		echo "usage: $ZFS_TOOLS snapshot save <name>"

		exit 1
	fi

	for pool in $POOL_LIST; do
		zfs snapshot -r $pool@$1
	done
}

function snapshot {
	if [ -z "$1" ]; then
		snapshot_help "${@:2}"
	fi

	case "$1" in
		apply)
			snapshot_apply "${@:2}"
			;;
		clear)
			snapshot_clear "${@:2}"
			;;
		destroy)
			snapshot_destroy "${@:2}"
			;;
		list)
			snapshot_list "${@:2}"
			;;
		save)
			snapshot_save "${@:2}"
			;;
		*)
			snapshot_help "${@:2}"
			;;
	esac
}

case "$1" in
	docker)
		docker "${@:2}"
		;;
	pool)
		pool "${@:2}"
		;;
	snapshot)
		snapshot "${@:2}"
		;;
	*)
		help "${@:2}"
		;;
esac

